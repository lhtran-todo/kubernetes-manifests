---
apiVersion: v1
kind: Namespace
metadata:
  name: todo
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: todo
  namespace: todo
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::{account}:role/{role_name}
---
apiVersion: secrets-store.csi.x-k8s.io/v1
kind: SecretProviderClass
metadata:
  name: rds-db-secret
  namespace: todo
spec:
  provider: aws
  parameters:
    objects: |
      - objectName: "{param_name}"
        objectType: ssmparameter
        objectAlias: "db_conn.json"
      - objectName: "{secret_name}"
        objectType: secretsmanager
        objectAlias: db_cred.json
---
apiVersion: v1
kind: Service
metadata:
  name: todo-frontend-svc
  namespace: todo
spec:
  ports:
    - name: http
      port: 80
      targetPort: 80
      protocol: TCP
  type: NodePort
  selector:
    app: todo-frontend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: todo-frontend-deployment
  namespace: todo
  labels:
    app: todo-frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: todo-frontend
  template:
    metadata:
      labels:
        app: todo-frontend
    spec:
      containers:
        - name: todo-frontend
          image: longhtran91/todo-frontend
          imagePullPolicy: Always
          ports:
            - containerPort: 80
          env:
            - name: APP_PORT
              value: "80"
            - name: RUNTIME_API_URL
              value: /api/
            - name: RUNTIME_ENABLE_BACKEND_PROXY
              value: "true"
            - name: RUNTIME_PROXY_BACKEND
              value: http://todo-backend-svc:8000/         
---
apiVersion: v1
kind: Service
metadata:
  name: todo-backend-svc
  namespace: todo
spec:
  ports:
    - name: http
      port: 8000
      targetPort: 8000
      protocol: TCP
  type: ClusterIP
  selector:
    app: todo-backend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: todo-backend-deployment
  namespace: todo
  labels:
    app: todo-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: todo-backend
  template:
    metadata:
      labels:
        app: todo-backend
    spec:
      serviceAccountName: todo
      containers:
        - name: todo-backend
          image: longhtran91/todo-backend
          imagePullPolicy: Always
          ports:
            - containerPort: 8000
          env:
            - name: APP_PORT
              value: "8000"
            - name: DB_CRED_FILE_PATH
              value: /etc/secrets/db_cred.json
            - name: DB_CONNECTION_FILE_PATH
              value: /etc/secrets/db_conn.json
          volumeMounts:
            - name: db-secret
              mountPath: /etc/secrets
              readOnly: true
      volumes:
        - name: db-secret
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: rds-db-secret
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: todo
  name: ingress-todo
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-lhtran-net-example
spec:
  tls:
  - hosts:
    - todo.lhtran.net
    secretName: todo-lhtran-net-cert
  rules:
  - host: dev.todo.lhtran.net
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: todo-frontend-svc
            port:
              number: 80